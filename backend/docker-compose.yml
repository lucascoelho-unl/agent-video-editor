services:
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    environment:
      # MinIO Configuration
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 2s
      timeout: 2s
      retries: 6

  minio-init:
    image: python:3.13-slim
    volumes:
      - ./scripts:/app/scripts
      - ./storage:/app/storage
    env_file:
      - .env
    environment:
      # MinIO Configuration
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
    command: >
      sh -c "
        pip install minio &&
        python /app/scripts/init_minio.py
      "
    depends_on:
      minio:
        condition: service_healthy
    restart: "no"

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8002:8002"
    volumes:
      - ./api:/app
    restart: unless-stopped
    depends_on:
      minio-init:
        condition: service_completed_successfully
    environment:
      # MinIO Configuration
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}

  agent:
    build:
      context: ./agent_worker
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./agent_worker:/app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Agent Configuration
      - AGENT_MODEL=${AGENT_MODEL}
      # Python Configuration
      - PYTHONUNBUFFERED=1
      # MinIO Configuration
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      # Google API Configuration
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      # Langsmith Configuration
      - LANGSMITH_TRACING=${LANGSMITH_TRACING}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - LANGSMITH_PROJECT=${LANGSMITH_PROJECT}
    depends_on:
      minio-init:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 4G

volumes:
  minio_data: