services:
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-init:
    image: python:3.11-slim
    volumes:
      - ./scripts:/app/scripts
      - ./storage:/app/storage
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - MINIO_BUCKET_NAME=video-storage
    command: >
      sh -c "
        pip install minio &&
        python /app/scripts/init_minio.py
      "
    depends_on:
      minio:
        condition: service_healthy
    restart: "no"

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - ./api/.env
    ports:
      - "8002:8002"
    volumes:
      - ./api:/app
    restart: unless-stopped
    depends_on:
      minio-init:
        condition: service_completed_successfully
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - MINIO_BUCKET_NAME=video-storage

  agent:
    build:
      context: ./agent_worker
      dockerfile: Dockerfile
    env_file:
      - ./agent_worker/agent/.env
    ports:
      - "8000:8000"
    volumes:
      - ./agent_worker:/app
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - MINIO_BUCKET_NAME=video-storage
    depends_on:
      minio-init:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 4G

volumes:
  minio_data: